blueprint:
  name: Turn on temporary light
  domain: automation
  input:
    input_entity:
      name: Input entity
      selector:
        entity:
          domain:
            - light
            - binary_sensor
    light_to_turn_on:
      name: Light to turn on
      selector:
        entity:
          domain: light
    timeout_seconds:
      name: Timeout in seconds
      selector:
        number:
          min: 10
          max: 600
          mode: slider

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input input_entity
    to: "on"

condition:
  - condition: state
    entity_id: !input light_to_turn_on
    state: "off"

action:
  - variables:
      light_to_turn_on: !input light_to_turn_on
  - alias: Turn on the light
    service: light.turn_on
    target:
      entity_id: !input light_to_turn_on
  - delay:
      seconds: 1
  - alias: Wait
    wait_template: "{{ expand(light_to_turn_on) | selectattr('state', 'eq', 'on') | list | count == 0 }}"
    timeout:
      seconds: !input timeout_seconds
  - alias: Turn off the light
    service: light.turn_off
    target:
      entity_id: !input light_to_turn_on
